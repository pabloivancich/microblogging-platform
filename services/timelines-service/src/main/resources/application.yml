spring:
  application:
    name: timelines-service
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: timelines-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*" # allow deserialization of your domain classes
        spring.json.use.type.headers: false

server:
  port: 8083

services:
  users:
    base-url: http://${USERS_SERVICE_HOST}:${USERS_SERVICE_PORT} # This should match docker-compose or k8s service name
